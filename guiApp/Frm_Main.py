# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Fri Feb 14 17:06:48 2014
#

import wx
# begin wxGlade: dependencies
import wx.grid
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

import Frm_NewConn
import time
import sys
sys.path.append('..')
import lib.db as db_c
import lib.gestionUsuarios as ad
import lib.db as db_c

class Frm_Main(wx.Frame):
    
    _Frm_NewConn__server    = ''
    _Frm_NewConn__CN        = ''
    _Frm_NewConn__passwd    = ''
    _ListaUsuarios 	        = {}
    _gdb                    = ''
    
    
    def _Frm_NewConn__connectToServer ( self, *args, **kwds ):
        cad_conn =  'try connect %s  in %s ' % ( self._Frm_NewConn__CN, self._Frm_NewConn__server )              
        initFrm_statusbar_fields = [_( cad_conn )]
        self.initFrm_statusbar.SetStatusText(initFrm_statusbar_fields[0], 0)
            
	ListaUsrs 	= ad.gestionUsuarios ( 'administrador@tsc.uc3m.es', self._Frm_NewConn__passwd , 'cn=Users,dc=tsc, dc=uc3m,dc=es', self._Frm_NewConn__server )
	#print ListaUsrs[0]
        #Do a lot stuff
        #connect server
        #print users
	self._ListaUsuarios =  ListaUsrs.getAllUsers ()
	if len ( self._ListaUsuarios) > 0:
	        cad_conn =  'connect to %s' % ( self._Frm_NewConn__server )
	        initFrm_statusbar_fields = [_( cad_conn )]
	        self.initFrm_statusbar.SetStatusText(initFrm_statusbar_fields[0], 0)
		cont_user = 0
		for k, v in self._ListaUsuarios.items():
			self.Grd_ListaUsrs.InsertRows (cont_user, 1)
			self.Grd_ListaUsrs.SetCellValue(cont_user,0,k)
			cont_att = 1
			print v
			for att,value in v.items():
				print v[att]
				self.Grd_ListaUsrs.SetCellValue(cont_user,cont_att, str(v[att]))
				cont_att = cont_att + 1
			cont_user = cont_user + 1
		self.Grd_ListaUsrs.AutoSize()
		self.Grd_ListaUsrs.SetScrollLineX(500)
		self.Grd_ListaUsrs.SetScrollLineY(500)
		return 1
	else:
	        cad_conn =  'fail to %s' % ( self._Frm_NewConn__server )
	        initFrm_statusbar_fields = [_( cad_conn )]
	        self.initFrm_statusbar.SetStatusText(initFrm_statusbar_fields[0], 0)

	        return 0

	def _Frm_Conn2__connectToServer ( self, *args, **kwds ):
		cad_conn =  'try connect %s  in %s ' % ( self._Frm_Conn2__CN, self._Frm_Conn2__server )              
		initFrm_statusbar_fields = [_( cad_conn )]
		self.initFrm_statusbar.SetStatusText(initFrm_statusbar_fields[0], 0)
		    
		ListaUsrs 	= ad.gestionUsuarios ( 'administrador@tsc.uc3m.es', self._Frm_Conn2__passwd , 'cn=Users,dc=tsc, dc=uc3m,dc=es', self._Frm_Conn2__server )
		#print ListaUsrs[0]
		#Do a lot stuff
		#connect server
		#print users
		self._ListaUsuarios =  ListaUsrs.getAllUsers ()
		if len ( self._ListaUsuarios) > 0:
			cad_conn =  'connect to %s' % ( self._Frm_Conn2__server )
			initFrm_statusbar_fields = [_( cad_conn )]
			self.initFrm_statusbar.SetStatusText(initFrm_statusbar_fields[0], 0)
			cont_user = 0
            
            
			for k, v in self._ListaUsuarios.items():
				self.Grd_ListaUsrs.InsertRows (cont_user, 1)
				self.Grd_ListaUsrs.SetCellValue(cont_user,0,k)
				cont_att = 1
				for att,value in v.items():
					print v[att]
					self.Grd_ListaUsrs.SetCellValue(cont_user,cont_att, str(v[att]))
					cont_att = cont_att + 1
				cont_user = cont_user + 1
			self.Grd_ListaUsrs.AutoSize()
			self.Grd_ListaUsrs.SetScrollLineX(500)
			self.Grd_ListaUsrs.SetScrollLineY(500)
			return 1
		else:
			cad_conn =  'fail to %s' % ( self._Frm_Conn2__server )
			initFrm_statusbar_fields = [_( cad_conn )]
			self.initFrm_statusbar.SetStatusText(initFrm_statusbar_fields[0], 0)

			return 0
        
    
    def __init__(self, *args, **kwds):
        # begin wxGlade: Frm_Main.__init__
        kwds["style"] = wx.CAPTION|wx.CLOSE_BOX|wx.MAXIMIZE|wx.SYSTEM_MENU|wx.RESIZE_BORDER|wx.FULL_REPAINT_ON_RESIZE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.Frm_Main_menubar = wx.MenuBar()
        self.File = wx.Menu()
        self.opc_newcon = wx.MenuItem(self.File, wx.NewId(), _("&New connection...\tCtrl+N"), "", wx.ITEM_NORMAL)
        self.File.AppendItem(self.opc_newcon)
        self.opc_newcon2 = wx.MenuItem(self.File, wx.NewId(), _("New Connection2"), "", wx.ITEM_NORMAL)
        self.File.AppendItem(self.opc_newcon2)
        self.File.AppendSeparator()
        self.opc_quit = wx.MenuItem(self.File, wx.NewId(), _("&Quit\tCtrl+Q"), "", wx.ITEM_NORMAL)
        self.File.AppendItem(self.opc_quit)
        self.Frm_Main_menubar.Append(self.File, _("File"))
        self.SetMenuBar(self.Frm_Main_menubar)
        # Menu Bar end
        self.initFrm_statusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.Frm_Main_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL|wx.TB_TEXT|wx.TB_HORZ_LAYOUT|wx.TB_HORZ_TEXT)
        self.SetToolBar(self.Frm_Main_toolbar)
        # Tool Bar end
        self.Grd_ListaUsrs = wx.grid.Grid(self, -1, size=(1, 1))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.opc_newcon_click, self.opc_newcon)
        self.Bind(wx.EVT_MENU, self.opc_newcon_click2, self.opc_newcon2)
        self.Bind(wx.EVT_MENU, self.opc_quit_click, self.opc_quit)
        # end wxGlade

        self.Bind(wx.EVT_CLOSE, self.opc_quit_click)

        self._gdb = db_c.db ('./')


 	gdb = db_c.db ('./')
        gdb.createConnectionsTable()

        
        

    def __set_properties(self):
        # begin wxGlade: Frm_Main.__set_properties
        self.SetTitle(_("Active Directory Management"))
        self.initFrm_statusbar.SetStatusWidths([-1])
        # statusbar fields
        initFrm_statusbar_fields = [_("initFrm_statusbar")]
        for i in range(len(initFrm_statusbar_fields)):
            self.initFrm_statusbar.SetStatusText(initFrm_statusbar_fields[i], i)
        self.Frm_Main_toolbar.SetToolSeparation(5)
        self.Frm_Main_toolbar.Realize()
        self.Grd_ListaUsrs.CreateGrid(1, 6)
        self.Grd_ListaUsrs.EnableEditing(0)
        self.Grd_ListaUsrs.SetColLabelValue(0, _("Login"))
        self.Grd_ListaUsrs.SetColLabelValue(1, _("Last Access"))
        self.Grd_ListaUsrs.SetColLabelValue(2, _("Expiry Date"))
        self.Grd_ListaUsrs.SetColLabelValue(3, _("CN"))
        self.Grd_ListaUsrs.SetColLabelValue(4, _("Days from Last Access"))
        self.Grd_ListaUsrs.SetColLabelValue(5, _("Days to Expire"))
        self.Grd_ListaUsrs.SetMinSize((600,400))
        self.Grd_ListaUsrs.SetBackgroundColour(wx.Colour(159, 159, 95))
        self.Grd_ListaUsrs.SetForegroundColour(wx.Colour(49, 55, 57))
        # end wxGlade

        initFrm_statusbar_fields = [_('ready...')]
        for i in range(len(initFrm_statusbar_fields)):
            self.initFrm_statusbar.SetStatusText(initFrm_statusbar_fields[i], i)

    def __do_layout(self):
        # begin wxGlade: Frm_Main.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.Grd_ListaUsrs, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        self.Centre()
        # end wxGlade

    def _Frm_NewConn__do_layout ( self ):
	self.__do_layout ()

    def btn_newConn_Click(self, event):  # wxGlade: Frm_Main.<event_handler>
        nc = Frm_NewConn.Frm_NewConn(parent=self)
        nc.Show(True)
        nc.MakeModal(True)

    def btn_newConn_Click2(self, event):  # wxGlade: Frm_Main.<event_handler>
        nc = Frm_Conn2.Frm_Conn2(parent=self)
        nc.Show(True)
        nc.MakeModal(True)

    def opc_newcon_click(self, event):  # wxGlade: Frm_Main.<event_handler>
        nc = Frm_NewConn.Frm_NewConn(parent=self)
        nc.Show(True)
        nc.MakeModal(True)

    def opc_newcon_click2(self, event):  # wxGlade: Frm_Main.<event_handler>
        nc = Frm_Conn2.Frm_Conn2(parent=self)
        nc.Show(True)
        nc.MakeModal(True)
        
        
    def opc_quit_click(self, event):  # wxGlade: Frm_Main.<event_handler>
        dlg = wx.MessageDialog(self, message='Do you want to quit?', caption='confirm',style=wx.YES_NO)
        result = dlg.ShowModal() 
        dlg.Destroy() 
        if result == wx.ID_YES:
            self.Destroy ()

    def OnOpenFileDialogButton(self, event):  # wxGlade: Frm_Main.<event_handler>
        filename = "" # Use filename as a flag
        dlg = wx.FileDialog(self, message="Choose a file")
        if dlg.ShowModal() == wx.ID_OK:
            # get the new filename from the dialog
            filename = dlg.GetPath()
            dlg.Destroy() # best to do this sooner than later
        if filename:
            print filename
        # use the file name

# end of class Frm_Main
